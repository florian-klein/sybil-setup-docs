{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Sybil Setup Documentation","text":""},{"location":"#about","title":"About","text":"<p>Sybil is a Lung Cancer Risk Prediction model. It can be used to score a series of DICOM images and predict the risk scores for a given DICOM Series. An implementation can be found on GitHub.</p> <p>While the model is easy to use, integrating it into a hospital environment is not trivial. This documentation provides instructions on setting up Sybil on arbitrary environments.</p>"},{"location":"#references","title":"References","text":"<p>GitHub Documentation:</p> <ul> <li>Sybil Documentation can be found here</li> </ul> <p>Cite the official Sybil Paper:</p> <pre><code>@article{mikhael2023sybil,\n  title={Sybil: a validated deep learning model to predict future lung cancer risk from a single low-dose chest computed tomography},\n  author={Mikhael, Peter G and Wohlwend, Jeremy and Yala, Adam and Karstens, Ludvig and Xiang, Justin and Takigami, Angelo K and Bourgouin, Patrick P and Chan, PuiYee and Mrah, Sofiane and Amayri, Wael and Juan, Yu-Hsiang and Yang, Cheng-Ta and Wan, Yung-Liang and Lin, Gigin and Sequist, Lecia V and Fintelmann, Florian J. and Barzilay, Regina},\n  journal={Journal of Clinical Oncology},\n  pages={JCO--22},\n  year={2023},\n  publisher={Wolters Kluwer Health}\n}\n</code></pre>"},{"location":"faq/","title":"FAQ","text":""},{"location":"faq/#frequently-asked-questions","title":"Frequently Asked Questions","text":"<p>Please take a look at this page before directly contacting us. Most questions are already covered here:</p>          Could we observe real time utilization of sybil to gain an intuitive understanding to assist during discussions with hospital IT?           We would be happy to provide a screen capture of using Sybil on an iMac at our lab.               What security events are logged for access and for data modifications? Can this information be provided in an audit trail report?           No events were logged when we used Sybil in our lab. This could be implemented via a script, for example in Python.               Do you have a network diagram showing the software/hardware components, architecture, and communication and data flow?             All steps are performed on the machine where Sybil is installed. A more detailed description can be found in the guide we shared previously.               Does the software or data need to be backed up or retained for compliance?             We did not create any back ups when using Sybil at our lab. From our side, no backups or logging are required.               How are users\u2019 access permissions assigned and controlled? (Is users\u2019 access to the software role-based.)           Sybil is installed within Docker as a regular application on the machine, therefore each user on the device can access Docker and Sybil.               What type of authentication is used for users\u2019 access to the software? (Active directory, application credentials, local user, none, other?)           No authentication was required when we used Sybil at our lab, but this could be implemented.               Is any data stored locally on the users\u2019 devices?           Yes, the data analyzed by Sybil and the output are stored on the device where Sybil is installed.               Is any data stored or processed outside of Hospital networks?           No data is sent outside the device where Sybil is installed.               How is the software patched/updated for vulnerabilities?           Sybil was developed and updated as needed by Dr. Barzilay\u2019s group at MIT.               Does the software: process(send/receive), store, access, or display ePHI (patient data) or other data subject to regulation?             In our lab, we used Sybil to process CT scans containing patient data. It should also be possible to run Sybil on anonymized CT scans from which patient data was removed.               If the software does not store patient data, how would we link each data set (CT scan and sybil out)?               If running Sybil on anonymized CT scans, one option would be to replace the accession number with another unique identifier. This could be implemented via a script."},{"location":"getting_started/installation/","title":"Requirements and Installation","text":"<p>Note: Basic knowledge of command line is required.</p> <p>Software:</p> <ul> <li>Docker</li> </ul> <p>Host System:</p> <ul> <li> <p>15GB storage</p> </li> <li> <p>8GB RAM</p> </li> <li> <p>Modern CPU</p> </li> </ul> <p>Installation Instructions:</p>"},{"location":"getting_started/installation/#1-download-and-install-docker","title":"1. Download and install Docker","text":"<p>Alternatively, you can download [Docker Desktop]](https://www.docker.com/get-started) if you prefer a desktop GUI.</p>"},{"location":"getting_started/installation/#2-download-sybij","title":"2. Download Sybij","text":"<p>For the Mac / Linux version run the following command:</p> <pre><code>docker pull mitjclinic/sybil\n</code></pre> <p>For the Windows Version run the following command:</p> <pre><code>docker pull mitjclinic/sybil:windows\n</code></pre>"},{"location":"getting_started/installation/#3-verify-that-the-image-has-been-successfully-loaded","title":"3. Verify that the image has been successfully loaded:","text":"<p>To do this, run the following command:</p> <pre><code>docker image ls\n</code></pre>"},{"location":"getting_started/installation/#local-command-line-demo","title":"Local Command Line Demo","text":"<p>The \"sybil\" container creates a server for an API. The API implements the endpoint \"/dicom/files\" to receive DICOM files through a HTTP POST request. The API will then return predictions with the server's response.</p> <p>Running the Server/Model:</p> <ol> <li> <p>Download and extract the demo data. This folder folder contains one LDCT from the publicly available LUNA16 dataset used as demo data, and a text file called sybil_run.txt that will allow you to process that particular example.</p> </li> <li> <p>Choose a [PORT] to expose, i.e., 5000. Run the docker image:</p> </li> </ol> <pre><code>docker run -p \\[PORT\\]:5000 mitjclinic/sybil:windows\n</code></pre> <p>You should see logging messages indicated that a server has been started.</p> <ul> <li>In the sybil_run.txt file, fill http://localhost:[PORT]/dicom/files with your chosen   port. Next, with the extracted folder \"sybil_demo_data/\" in the same   working directory, you can run the demo using the sybil_run.txt   file:</li> </ul> <pre><code>sh sybil_run.txt\n</code></pre> <p>The curl command may need to be installed with your package manager</p> <p>depending on your OS.</p> <p>Given that LDCTs usually are usually composed of dozens of DICOM images, we provide this text file that allows you to loop over all the images in a directory (example: sybil_demo_data or any other directory containing the images for a single patient) and send them to the API as one single request.</p> <p>Be sure to replace [PORT] in the sybil_run.txt file with your chosen port number.</p> <p>Important Note: Each request to this endpoint should be the equivalent of a single exam.4. After a few minutes, you will receive a JSON response like so:</p> <p>On the hospital side, some program/script would need to be written to send files to the API and handle the JSON return object. This program ideally will be what interfaces with a database to grab the DICOM images and store the JSON predictions.</p>"}]}